git checkout -- file				丢弃工作区修改
git reset HEAD <file>				丢弃暂存区修改
git reset --hard commit_id			回退到commit_id版本
git log								查看提交历史
git reflog							查看命令历史，可确定回到未来的哪个版本
git diff							查看修改内容
git diff HEAD -- <file>				查看工作区和版本库里面最新版本的区别
git rm 								删除一个文件
git remote add origin ***.git		关连远程仓库
git push -u origin master			第一次推送master所有分支内容
git push origin master				推送master最新内容
git clone							克隆远程仓库
git branch							查看分支
git branch <name>					创建分支
git checkout <name>					切换分支
git checkout -b <name>				创建同时切换分支
git merge <name>					合并某分支到当前分支
git branch -d <name>				删除分支
git log --graph						查看分支合并图
git log --graph --pretty=oneline --abbrev-commit	查看分支合并图简略版本
git merge --no-ff -m 				使用普通模式进行合并，可以查看到合并历史
git stash							保存当前工作区
git stash list						查看被保存起来的工作区
git stash apply						恢复工作区，不删除stash
git stash drop						删除被保存起来的工作区
git stash pop						恢复工作区的同时删除保存起来的工作区
git stash apply stash@{n}			恢复指定的工作区
git branch -D <name>				强行删除没有被合并过的分支
git remote -v						查看远程库信息
git push origin branch-name			从本地推送分支
git pull							抓取远程的新提交
git checkout -b branch-name origin/branch-name	在本地创建和远程分支对应的分支
git branch --set-upstream branch-name origin/branch-name	建立本地分支和远程分支的关联
git tag <name>						给当前分支打标签
git tag								查看所有标签
git tag <name> commit_id 			给指定commit打标签
git show <tagname>					查看标签信息